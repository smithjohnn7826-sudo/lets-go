name: ðŸš€ 6-Hour SSHX Discord Notifier (Debian 13)

# -----------------------------------------------------------------
# 1. EVENT TRIGGERS
# -----------------------------------------------------------------
on:
  schedule:
    - cron: '30 0,5,11,16,22 * * *'
  workflow_dispatch:

# -----------------------------------------------------------------
# 2. JOB DEFINITION
# -----------------------------------------------------------------
jobs:
  sshx_max_duration:
    name: Interactive Debug Shell (sshx)
    runs-on: ubuntu-latest
    timeout-minutes: 360 

    container:
      image: debian:13
      options: --user root

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ðŸš¨ FIX: Ensure all required utilities (curl, procps, awk) are installed
      - name: Install Dependencies
        run: |
          apt-get update
          # Install curl, procps (for kill), and gawk (sometimes standard awk is minimal)
          apt-get install -y curl procps gawk

      # ðŸš¨ FIX: Separate download and execution for stability
      - name: 1. Start SSHX and Capture Link (Most Stable Version)
        id: sshx_setup 
        run: |
          echo "Starting SSHX session and capturing URL..."
          
          # 1. Download the sshx binary and make it executable
          curl -sSf -L https://sshx.io/get -o /usr/local/bin/sshx
          chmod +x /usr/local/bin/sshx
          
          # 2. Run the binary directly in the background
          # We use /usr/local/bin/sshx run --headless instead of the piping method
          /usr/local/bin/sshx run --headless > /tmp/sshx_link.log 2>&1 &
          SSHX_PID=$!
          
          # 3. Wait 15 seconds for the service to fully initialize
          sleep 15
          
          # 4. Check for log file existence
          if [ ! -f /tmp/sshx_link.log ]; then
              echo "::error::Log file was not created."
              exit 1
          fi
          
          # 5. Extract the URL using gawk for reliability
          # NOTE: Using 'gawk' (GNU awk) for maximum compatibility
          SSHX_URL=$(grep 'Sharing session at:' /tmp/sshx_link.log | gawk '{print $NF}')
          
          # 6. Validate and set the output.
          if [[ "$SSHX_URL" == "https://sshx.io/s/"* ]]; then
            echo "sshx_url=$SSHX_URL" >> $GITHUB_OUTPUT
            echo "Successfully captured SSHX URL: $SSHX_URL"
          else
            echo "::error::Failed to capture sshx URL."
            echo "--- /tmp/sshx_link.log content for debug ---"
            cat /tmp/sshx_link.log
            echo "-------------------------------------------"
            # Kill the background process and fail the step
            kill $SSHX_PID 2>/dev/null
            exit 1
          fi

      - name: 2. Send URL to Discord Webhook
        if: success() && steps.sshx_setup.outputs.sshx_url != ''
        env:
          URL: ${{ steps.sshx_setup.outputs.sshx_url }}
        run: |
          WEBHOOK_DATA='{
            "content": "**New SSHX Session Started!** ðŸš€",
            "embeds": [{
              "title": "Connect to Runner",
              "description": "The 6-hour high-resource debugging session has started. **RECONNECT NOW** to the new link.",
              "url": "${{ env.URL }}",
              "color": 3447003,
              "fields": [{
                "name": "Link",
                "value": "[Click to Connect](${{ env.URL }})",
                "inline": false
              }]
            }]
          }'
          
          curl -H "Content-Type: application/json" \
               -d "$WEBHOOK_DATA" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: 3. Keep Job Alive for Max Duration
        if: success() 
        run: |
          echo "SSHX session is running in the background. Job will run for the full 6 hours."
          tail -f /tmp/sshx_link.log
