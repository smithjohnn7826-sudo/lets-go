name: ðŸš€ 6-Hour SSHX Discord Notifier (Debian 13)

# -----------------------------------------------------------------
# 1. EVENT TRIGGERS
# -----------------------------------------------------------------
on:
  schedule:
    - cron: '30 0,5,11,16,22 * * *'
  workflow_dispatch:

# -----------------------------------------------------------------
# 2. JOB DEFINITION
# -----------------------------------------------------------------
jobs:
  sshx_max_duration:
    name: Interactive Debug Shell (sshx)
    runs-on: ubuntu-latest
    timeout-minutes: 360 

    container:
      image: debian:13
      options: --user root # Run as root inside container for full permissions

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Install bash and other dependencies
      - name: Install Dependencies
        run: |
          apt-get update
          # Install curl, gawk, and bash (needed for the next step's shell: bash)
          apt-get install -y curl gawk bash procps

      - name: 1. Start SSHX in Background
        id: start_sshx
        shell: bash # Explicitly use bash to avoid shell-compatibility issues
        run: |
          echo "Starting SSHX session..."
          
          SSHX_LOG="/tmp/sshx_link.log"
          
          # Download the sshx binary and make it executable
          curl -sSf -L https://sshx.io/get -o /usr/local/bin/sshx
          chmod +x /usr/local/bin/sshx
          
          # Run the binary in the background and redirect output
          > "$SSHX_LOG" 
          /usr/local/bin/sshx run --headless > "$SSHX_LOG" 2>&1 &
          
          # Set the process ID (PID) as an output for cleanup/killing later
          echo "sshx_pid=$!" >> $GITHUB_OUTPUT
          echo "SSHX process started with PID: $!"

      # ðŸš¨ NEW: Wait for the URL to appear in the log file
      # This Action is much better at polling than a manual shell loop
      - name: 2. Wait for SSHX URL to Appear
        id: wait_for_url
        uses: jakejarvis/wait-action@master
        with:
          time: '30s' # Maximum time to wait
          condition: 'grep "Sharing session at:" /tmp/sshx_link.log'
      
      - name: 3. Extract and Validate URL
        id: extract_url
        shell: bash # Use bash for the conditional logic
        run: |
          SSHX_LOG="/tmp/sshx_link.log"
          
          # Extract the URL. If the wait-action succeeded, the URL should be here.
          SSHX_URL=$(grep 'Sharing session at:' "$SSHX_LOG" | gawk '{print $NF}')
          
          # Validate the URL
          if [[ "$SSHX_URL" == "https://sshx.io/s/"* ]]; then
            echo "sshx_url=$SSHX_URL" >> $GITHUB_OUTPUT
            echo "::notice::Successfully captured SSHX URL: $SSHX_URL"
          else
            echo "::error::Failed to capture sshx URL. Log content is below."
            echo "--- $SSHX_LOG content ---"
            cat "$SSHX_LOG"
            echo "-------------------------"
            exit 1
          fi

      - name: 4. Send URL to Discord Webhook
        # This step is now isolated and will only run if the URL was extracted (Step 3 succeeded)
        if: success() && steps.extract_url.outputs.sshx_url != ''
        env:
          URL: ${{ steps.extract_url.outputs.sshx_url }}
        run: |
          WEBHOOK_DATA='{
            "content": "**New SSHX Session Started!** ðŸš€",
            "embeds": [{
              "title": "Connect to Runner",
              "description": "The 6-hour high-resource debugging session has started. **RECONNECT NOW** to the new link.",
              "url": "${{ env.URL }}",
              "color": 3447003,
              "fields": [{
                "name": "Link",
                "value": "[Click to Connect](${{ env.URL }})",
                "inline": false
              }]
            }]
          }'
          
          curl -H "Content-Type: application/json" \
               -d "$WEBHOOK_DATA" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: 5. Keep Job Alive for Max Duration
        if: success() 
        run: |
          echo "SSHX session is running in the background. Job will run for the full 6 hours."
          # Keeps the job alive by tailing the log file.
          tail -f /tmp/sshx_link.log
