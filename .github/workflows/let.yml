name: ðŸš€ 6-Hour SSHX Session Runner (Clean Link Output)

# -----------------------------------------------------------------
# 1. EVENT TRIGGERS
# -----------------------------------------------------------------
on:
  schedule:
    # Runs at ~5.5 hour intervals to restart the session before the 6-hour limit.
    - cron: '30 0,5,11,16,22 * * *'
  workflow_dispatch:

# -----------------------------------------------------------------
# 2. JOB DEFINITION
# -----------------------------------------------------------------
jobs:
  sshx_max_duration:
    name: Interactive Debug Shell (sshx)
    runs-on: ubuntu-latest
    timeout-minutes: 360 # 6 hours total duration

    container:
      image: alpine/git:latest
      options: --user root

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ðŸš¨ FINAL FIX: Adding a broad range of common networking tools ðŸš¨
      - name: Install Dependencies (Full Network Stack)
        run: |
          apk update
          # Broad list of packages often needed for low-level networking in containers
          apk add gawk bash procps curl util-linux iproute2 net-tools bind-tools
          
      # 1. Install and Start SSHX Session in Background
      - name: 1. Start SSHX Session
        id: start_sshx
        shell: bash
        run: |
          echo "Installing SSHX..."
          curl -sSf https://sshx.io/get | sh
          
          SSHX_LOG="/tmp/sshx_link.log"
          # Start sshx wrapped in 'script' to handle TTY, sending all output to the log file.
          > "$SSHX_LOG" 
          script -q -c "sshx run --headless" /dev/null > "$SSHX_LOG" 2>&1 &
          
          sleep 5
          echo "sshx_log_file=$SSHX_LOG" >> $GITHUB_OUTPUT

      # 2. Wait for and Print URL (Success is a clean link print)
      - name: 2. Get and Print SSHX Link
        id: extract_url
        shell: bash
        run: |
          SSHX_LOG="${{ steps.start_sshx.outputs.sshx_log_file }}"
          TIMEOUT=90;
          SSHX_URL="";
          
          echo "Waiting for SSHX Link...";
          
          for i in $(seq 1 $TIMEOUT); do
            SSHX_URL=$(grep 'Sharing session at:' "$SSHX_LOG" | gawk '{print $NF}' | tail -n 1);
            if [ -n "$SSHX_URL" ] && [[ "$SSHX_URL" == "https://sshx.io/s/"* ]]; then
              break;
            fi
            sleep 1;
          done;
          
          if [ -n "$SSHX_URL" ] && [[ "$SSHX_URL" == "https://sshx.io/s/"* ]]; then
            # ðŸš¨ THIS IS THE CLEAN LINK OUTPUT ðŸš¨
            echo "SSHX SESSION LINK: $SSHX_URL"
            echo "sshx_url=$SSHX_URL" >> $GITHUB_OUTPUT
          else
            echo "::error::Failed to get SSHX link. The full error log is printed below."
            # Print the log for debugging ONLY on failure
            echo "--- FINAL ERROR LOG ---"
            cat "$SSHX_LOG"
            echo "-----------------------"
            exit 1;
          fi

      # 3. Keep Job Alive for Max Duration (6 hours)
      - name: 3. Keep Job Alive for 6 Hours
        if: success() 
        run: |
          SSHX_LOG="${{ steps.start_sshx.outputs.sshx_log_file }}"
          echo "SSHX is running. The job will now stay active for 6 hours."
          # This keeps the job alive until the next scheduled job (5.5 hours) takes over.
          tail -f "$SSHX_LOG"
